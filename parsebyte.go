/*
  ParseByte: take a byte as a string in byte array format and return
  it's numerical value

  I wrote this to try and create a speed boost to reading numbers from a text
  file

  I feel that using things like scanf and parseint are slow compared to a reduced
  set lookup table
*/

package main

var _parsebyte_lookup_table = map[[3]byte]byte {
  [3]byte{48}: 0,
  [3]byte{49}: 1,
  [3]byte{50}: 2,
  [3]byte{51}: 3,
  [3]byte{52}: 4,
  [3]byte{53}: 5,
  [3]byte{54}: 6,
  [3]byte{55}: 7,
  [3]byte{56}: 8,
  [3]byte{57}: 9,
  [3]byte{49, 48}: 10,
  [3]byte{49, 49}: 11,
  [3]byte{49, 50}: 12,
  [3]byte{49, 51}: 13,
  [3]byte{49, 52}: 14,
  [3]byte{49, 53}: 15,
  [3]byte{49, 54}: 16,
  [3]byte{49, 55}: 17,
  [3]byte{49, 56}: 18,
  [3]byte{49, 57}: 19,
  [3]byte{50, 48}: 20,
  [3]byte{50, 49}: 21,
  [3]byte{50, 50}: 22,
  [3]byte{50, 51}: 23,
  [3]byte{50, 52}: 24,
  [3]byte{50, 53}: 25,
  [3]byte{50, 54}: 26,
  [3]byte{50, 55}: 27,
  [3]byte{50, 56}: 28,
  [3]byte{50, 57}: 29,
  [3]byte{51, 48}: 30,
  [3]byte{51, 49}: 31,
  [3]byte{51, 50}: 32,
  [3]byte{51, 51}: 33,
  [3]byte{51, 52}: 34,
  [3]byte{51, 53}: 35,
  [3]byte{51, 54}: 36,
  [3]byte{51, 55}: 37,
  [3]byte{51, 56}: 38,
  [3]byte{51, 57}: 39,
  [3]byte{52, 48}: 40,
  [3]byte{52, 49}: 41,
  [3]byte{52, 50}: 42,
  [3]byte{52, 51}: 43,
  [3]byte{52, 52}: 44,
  [3]byte{52, 53}: 45,
  [3]byte{52, 54}: 46,
  [3]byte{52, 55}: 47,
  [3]byte{52, 56}: 48,
  [3]byte{52, 57}: 49,
  [3]byte{53, 48}: 50,
  [3]byte{53, 49}: 51,
  [3]byte{53, 50}: 52,
  [3]byte{53, 51}: 53,
  [3]byte{53, 52}: 54,
  [3]byte{53, 53}: 55,
  [3]byte{53, 54}: 56,
  [3]byte{53, 55}: 57,
  [3]byte{53, 56}: 58,
  [3]byte{53, 57}: 59,
  [3]byte{54, 48}: 60,
  [3]byte{54, 49}: 61,
  [3]byte{54, 50}: 62,
  [3]byte{54, 51}: 63,
  [3]byte{54, 52}: 64,
  [3]byte{54, 53}: 65,
  [3]byte{54, 54}: 66,
  [3]byte{54, 55}: 67,
  [3]byte{54, 56}: 68,
  [3]byte{54, 57}: 69,
  [3]byte{55, 48}: 70,
  [3]byte{55, 49}: 71,
  [3]byte{55, 50}: 72,
  [3]byte{55, 51}: 73,
  [3]byte{55, 52}: 74,
  [3]byte{55, 53}: 75,
  [3]byte{55, 54}: 76,
  [3]byte{55, 55}: 77,
  [3]byte{55, 56}: 78,
  [3]byte{55, 57}: 79,
  [3]byte{56, 48}: 80,
  [3]byte{56, 49}: 81,
  [3]byte{56, 50}: 82,
  [3]byte{56, 51}: 83,
  [3]byte{56, 52}: 84,
  [3]byte{56, 53}: 85,
  [3]byte{56, 54}: 86,
  [3]byte{56, 55}: 87,
  [3]byte{56, 56}: 88,
  [3]byte{56, 57}: 89,
  [3]byte{57, 48}: 90,
  [3]byte{57, 49}: 91,
  [3]byte{57, 50}: 92,
  [3]byte{57, 51}: 93,
  [3]byte{57, 52}: 94,
  [3]byte{57, 53}: 95,
  [3]byte{57, 54}: 96,
  [3]byte{57, 55}: 97,
  [3]byte{57, 56}: 98,
  [3]byte{57, 57}: 99,
  [3]byte{49, 48, 48}: 100,
  [3]byte{49, 48, 49}: 101,
  [3]byte{49, 48, 50}: 102,
  [3]byte{49, 48, 51}: 103,
  [3]byte{49, 48, 52}: 104,
  [3]byte{49, 48, 53}: 105,
  [3]byte{49, 48, 54}: 106,
  [3]byte{49, 48, 55}: 107,
  [3]byte{49, 48, 56}: 108,
  [3]byte{49, 48, 57}: 109,
  [3]byte{49, 49, 48}: 110,
  [3]byte{49, 49, 49}: 111,
  [3]byte{49, 49, 50}: 112,
  [3]byte{49, 49, 51}: 113,
  [3]byte{49, 49, 52}: 114,
  [3]byte{49, 49, 53}: 115,
  [3]byte{49, 49, 54}: 116,
  [3]byte{49, 49, 55}: 117,
  [3]byte{49, 49, 56}: 118,
  [3]byte{49, 49, 57}: 119,
  [3]byte{49, 50, 48}: 120,
  [3]byte{49, 50, 49}: 121,
  [3]byte{49, 50, 50}: 122,
  [3]byte{49, 50, 51}: 123,
  [3]byte{49, 50, 52}: 124,
  [3]byte{49, 50, 53}: 125,
  [3]byte{49, 50, 54}: 126,
  [3]byte{49, 50, 55}: 127,
  [3]byte{49, 50, 56}: 128,
  [3]byte{49, 50, 57}: 129,
  [3]byte{49, 51, 48}: 130,
  [3]byte{49, 51, 49}: 131,
  [3]byte{49, 51, 50}: 132,
  [3]byte{49, 51, 51}: 133,
  [3]byte{49, 51, 52}: 134,
  [3]byte{49, 51, 53}: 135,
  [3]byte{49, 51, 54}: 136,
  [3]byte{49, 51, 55}: 137,
  [3]byte{49, 51, 56}: 138,
  [3]byte{49, 51, 57}: 139,
  [3]byte{49, 52, 48}: 140,
  [3]byte{49, 52, 49}: 141,
  [3]byte{49, 52, 50}: 142,
  [3]byte{49, 52, 51}: 143,
  [3]byte{49, 52, 52}: 144,
  [3]byte{49, 52, 53}: 145,
  [3]byte{49, 52, 54}: 146,
  [3]byte{49, 52, 55}: 147,
  [3]byte{49, 52, 56}: 148,
  [3]byte{49, 52, 57}: 149,
  [3]byte{49, 53, 48}: 150,
  [3]byte{49, 53, 49}: 151,
  [3]byte{49, 53, 50}: 152,
  [3]byte{49, 53, 51}: 153,
  [3]byte{49, 53, 52}: 154,
  [3]byte{49, 53, 53}: 155,
  [3]byte{49, 53, 54}: 156,
  [3]byte{49, 53, 55}: 157,
  [3]byte{49, 53, 56}: 158,
  [3]byte{49, 53, 57}: 159,
  [3]byte{49, 54, 48}: 160,
  [3]byte{49, 54, 49}: 161,
  [3]byte{49, 54, 50}: 162,
  [3]byte{49, 54, 51}: 163,
  [3]byte{49, 54, 52}: 164,
  [3]byte{49, 54, 53}: 165,
  [3]byte{49, 54, 54}: 166,
  [3]byte{49, 54, 55}: 167,
  [3]byte{49, 54, 56}: 168,
  [3]byte{49, 54, 57}: 169,
  [3]byte{49, 55, 48}: 170,
  [3]byte{49, 55, 49}: 171,
  [3]byte{49, 55, 50}: 172,
  [3]byte{49, 55, 51}: 173,
  [3]byte{49, 55, 52}: 174,
  [3]byte{49, 55, 53}: 175,
  [3]byte{49, 55, 54}: 176,
  [3]byte{49, 55, 55}: 177,
  [3]byte{49, 55, 56}: 178,
  [3]byte{49, 55, 57}: 179,
  [3]byte{49, 56, 48}: 180,
  [3]byte{49, 56, 49}: 181,
  [3]byte{49, 56, 50}: 182,
  [3]byte{49, 56, 51}: 183,
  [3]byte{49, 56, 52}: 184,
  [3]byte{49, 56, 53}: 185,
  [3]byte{49, 56, 54}: 186,
  [3]byte{49, 56, 55}: 187,
  [3]byte{49, 56, 56}: 188,
  [3]byte{49, 56, 57}: 189,
  [3]byte{49, 57, 48}: 190,
  [3]byte{49, 57, 49}: 191,
  [3]byte{49, 57, 50}: 192,
  [3]byte{49, 57, 51}: 193,
  [3]byte{49, 57, 52}: 194,
  [3]byte{49, 57, 53}: 195,
  [3]byte{49, 57, 54}: 196,
  [3]byte{49, 57, 55}: 197,
  [3]byte{49, 57, 56}: 198,
  [3]byte{49, 57, 57}: 199,
  [3]byte{50, 48, 48}: 200,
  [3]byte{50, 48, 49}: 201,
  [3]byte{50, 48, 50}: 202,
  [3]byte{50, 48, 51}: 203,
  [3]byte{50, 48, 52}: 204,
  [3]byte{50, 48, 53}: 205,
  [3]byte{50, 48, 54}: 206,
  [3]byte{50, 48, 55}: 207,
  [3]byte{50, 48, 56}: 208,
  [3]byte{50, 48, 57}: 209,
  [3]byte{50, 49, 48}: 210,
  [3]byte{50, 49, 49}: 211,
  [3]byte{50, 49, 50}: 212,
  [3]byte{50, 49, 51}: 213,
  [3]byte{50, 49, 52}: 214,
  [3]byte{50, 49, 53}: 215,
  [3]byte{50, 49, 54}: 216,
  [3]byte{50, 49, 55}: 217,
  [3]byte{50, 49, 56}: 218,
  [3]byte{50, 49, 57}: 219,
  [3]byte{50, 50, 48}: 220,
  [3]byte{50, 50, 49}: 221,
  [3]byte{50, 50, 50}: 222,
  [3]byte{50, 50, 51}: 223,
  [3]byte{50, 50, 52}: 224,
  [3]byte{50, 50, 53}: 225,
  [3]byte{50, 50, 54}: 226,
  [3]byte{50, 50, 55}: 227,
  [3]byte{50, 50, 56}: 228,
  [3]byte{50, 50, 57}: 229,
  [3]byte{50, 51, 48}: 230,
  [3]byte{50, 51, 49}: 231,
  [3]byte{50, 51, 50}: 232,
  [3]byte{50, 51, 51}: 233,
  [3]byte{50, 51, 52}: 234,
  [3]byte{50, 51, 53}: 235,
  [3]byte{50, 51, 54}: 236,
  [3]byte{50, 51, 55}: 237,
  [3]byte{50, 51, 56}: 238,
  [3]byte{50, 51, 57}: 239,
  [3]byte{50, 52, 48}: 240,
  [3]byte{50, 52, 49}: 241,
  [3]byte{50, 52, 50}: 242,
  [3]byte{50, 52, 51}: 243,
  [3]byte{50, 52, 52}: 244,
  [3]byte{50, 52, 53}: 245,
  [3]byte{50, 52, 54}: 246,
  [3]byte{50, 52, 55}: 247,
  [3]byte{50, 52, 56}: 248,
  [3]byte{50, 52, 57}: 249,
  [3]byte{50, 53, 48}: 250,
  [3]byte{50, 53, 49}: 251,
  [3]byte{50, 53, 50}: 252,
  [3]byte{50, 53, 51}: 253,
  [3]byte{50, 53, 52}: 254,
  [3]byte{50, 53, 53}: 255,

  // zero padded
  [3]byte{48, 48, 48}: 0,
  [3]byte{48, 48, 49}: 1,
  [3]byte{48, 48, 50}: 2,
  [3]byte{48, 48, 51}: 3,
  [3]byte{48, 48, 52}: 4,
  [3]byte{48, 48, 53}: 5,
  [3]byte{48, 48, 54}: 6,
  [3]byte{48, 48, 55}: 7,
  [3]byte{48, 48, 56}: 8,
  [3]byte{48, 48, 57}: 9,
  [3]byte{48, 48}: 0,
  [3]byte{48, 49}: 1,
  [3]byte{48, 50}: 2,
  [3]byte{48, 51}: 3,
  [3]byte{48, 52}: 4,
  [3]byte{48, 53}: 5,
  [3]byte{48, 54}: 6,
  [3]byte{48, 55}: 7,
  [3]byte{48, 56}: 8,
  [3]byte{48, 57}: 9,
  [3]byte{48, 49, 48}: 10,
  [3]byte{48, 49, 49}: 11,
  [3]byte{48, 49, 50}: 12,
  [3]byte{48, 49, 51}: 13,
  [3]byte{48, 49, 52}: 14,
  [3]byte{48, 49, 53}: 15,
  [3]byte{48, 49, 54}: 16,
  [3]byte{48, 49, 55}: 17,
  [3]byte{48, 49, 56}: 18,
  [3]byte{48, 49, 57}: 19,
  [3]byte{48, 50, 48}: 20,
  [3]byte{48, 50, 49}: 21,
  [3]byte{48, 50, 50}: 22,
  [3]byte{48, 50, 51}: 23,
  [3]byte{48, 50, 52}: 24,
  [3]byte{48, 50, 53}: 25,
  [3]byte{48, 50, 54}: 26,
  [3]byte{48, 50, 55}: 27,
  [3]byte{48, 50, 56}: 28,
  [3]byte{48, 50, 57}: 29,
  [3]byte{48, 51, 48}: 30,
  [3]byte{48, 51, 49}: 31,
  [3]byte{48, 51, 50}: 32,
  [3]byte{48, 51, 51}: 33,
  [3]byte{48, 51, 52}: 34,
  [3]byte{48, 51, 53}: 35,
  [3]byte{48, 51, 54}: 36,
  [3]byte{48, 51, 55}: 37,
  [3]byte{48, 51, 56}: 38,
  [3]byte{48, 51, 57}: 39,
  [3]byte{48, 52, 48}: 40,
  [3]byte{48, 52, 49}: 41,
  [3]byte{48, 52, 50}: 42,
  [3]byte{48, 52, 51}: 43,
  [3]byte{48, 52, 52}: 44,
  [3]byte{48, 52, 53}: 45,
  [3]byte{48, 52, 54}: 46,
  [3]byte{48, 52, 55}: 47,
  [3]byte{48, 52, 56}: 48,
  [3]byte{48, 52, 57}: 49,
  [3]byte{48, 53, 48}: 50,
  [3]byte{48, 53, 49}: 51,
  [3]byte{48, 53, 50}: 52,
  [3]byte{48, 53, 51}: 53,
  [3]byte{48, 53, 52}: 54,
  [3]byte{48, 53, 53}: 55,
  [3]byte{48, 53, 54}: 56,
  [3]byte{48, 53, 55}: 57,
  [3]byte{48, 53, 56}: 58,
  [3]byte{48, 53, 57}: 59,
  [3]byte{48, 54, 48}: 60,
  [3]byte{48, 54, 49}: 61,
  [3]byte{48, 54, 50}: 62,
  [3]byte{48, 54, 51}: 63,
  [3]byte{48, 54, 52}: 64,
  [3]byte{48, 54, 53}: 65,
  [3]byte{48, 54, 54}: 66,
  [3]byte{48, 54, 55}: 67,
  [3]byte{48, 54, 56}: 68,
  [3]byte{48, 54, 57}: 69,
  [3]byte{48, 55, 48}: 70,
  [3]byte{48, 55, 49}: 71,
  [3]byte{48, 55, 50}: 72,
  [3]byte{48, 55, 51}: 73,
  [3]byte{48, 55, 52}: 74,
  [3]byte{48, 55, 53}: 75,
  [3]byte{48, 55, 54}: 76,
  [3]byte{48, 55, 55}: 77,
  [3]byte{48, 55, 56}: 78,
  [3]byte{48, 55, 57}: 79,
  [3]byte{48, 56, 48}: 80,
  [3]byte{48, 56, 49}: 81,
  [3]byte{48, 56, 50}: 82,
  [3]byte{48, 56, 51}: 83,
  [3]byte{48, 56, 52}: 84,
  [3]byte{48, 56, 53}: 85,
  [3]byte{48, 56, 54}: 86,
  [3]byte{48, 56, 55}: 87,
  [3]byte{48, 56, 56}: 88,
  [3]byte{48, 56, 57}: 89,
  [3]byte{48, 57, 48}: 90,
  [3]byte{48, 57, 49}: 91,
  [3]byte{48, 57, 50}: 92,
  [3]byte{48, 57, 51}: 93,
  [3]byte{48, 57, 52}: 94,
  [3]byte{48, 57, 53}: 95,
  [3]byte{48, 57, 54}: 96,
  [3]byte{48, 57, 55}: 97,
  [3]byte{48, 57, 56}: 98,
  [3]byte{48, 57, 57}: 99,
}

func ParseByte(input []byte) byte {
  var lookup [3]byte
  var input_length = len(input)
  if input_length > 3 {
    panic("Input out of bounds")
  }
  for i:=0; i<input_length; i++ {
    lookup[i] = input[i]
  }
  result, ok := _parsebyte_lookup_table[lookup]
  if ok {
    return(result)
  } else {
    panic("Input invalid")
  }
}
